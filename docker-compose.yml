version: "3.9"
services:
  db_service:
    build: ./db_service/
    command: sh -c "sleep 60s ; python3 db_listener.py"
#    command: sh -c "sleep 30s ;"
    volumes:
      - './db_service:/db_service'
    ports:
      - '80:8000'
    depends_on:
      - mysql
      - zookeeper
      - kafka
    networks:
      - kafka-net

  mysql:
    build: ./mysql/
    restart: always
    environment:
      MYSQL_DATABASE: 'offers'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    networks:
      - kafka-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

  app:
    build: .
    depends_on:
      - kafka
    networks:
      - kafka-net
    restart: on-failure

networks:
  kafka-net:
    driver: bridge